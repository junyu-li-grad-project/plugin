// Code generated by protoc-gen-go-scrpc. DO NOT EDIT.
// path test.proto

package test

import (
	context "context"
	scrpc "github.com/victor-leee/scrpc"
)

var client scrpc.Client

func init() {
	client = scrpc.NewClient()
}

type HelloService interface {
	SayHello(ctx context.Context, req *HelloRequest) (*HelloResponse, error)
	SayWoc(ctx context.Context, req *WocRequest) (*HelloResponse, error)
}

type HelloServiceImpl struct {
}

func (*HelloServiceImpl) SayHello(ctx context.Context, req *HelloRequest) (*HelloResponse, error) {
	resp := &HelloResponse{}
	err := client.UnaryRPCRequest(&scrpc.RequestContext{
		Ctx:           ctx,
		Req:           req,
		ReqService:    "github.com/victor-leee/test",
		ReqMethod:     "SayHello",
		SenderService: "github.com/victor-leee/caller",
		Resp:          resp,
	})
	return resp, err
}
func (*HelloServiceImpl) SayWoc(ctx context.Context, req *WocRequest) (*HelloResponse, error) {
	resp := &HelloResponse{}
	err := client.UnaryRPCRequest(&scrpc.RequestContext{
		Ctx:           ctx,
		Req:           req,
		ReqService:    "github.com/victor-leee/test",
		ReqMethod:     "SayWoc",
		SenderService: "github.com/victor-leee/caller",
		Resp:          resp,
	})
	return resp, err
}
